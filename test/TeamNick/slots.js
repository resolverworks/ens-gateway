import {ethers} from 'ethers';

let provider = new ethers.JsonRpcProvider('https://mainnet.base.org', 8453, {staticNetwork: true});

const A = '0x7C6EfCb602BC88794390A0d74c75ad2f1249A17f';

const SLOT_RECORDS = ethers.toBeHex(7, 32);



for (let i = 0; i < 10; i++) {
	console.log(i, await provider.getStorage(A, ethers.toBeHex(i, 32)));
}
console.log();

// 7 = mapping(uint256 => Record) records;
// struct Record { address addr; string avatar; }
// 8 = uint256 public totalSupply;
// 9 = string public baseUri;

const ID_RAFFY = ethers.id('raffy');

async function dump_slot(slot) {
	console.log(BigInt(slot), await provider.getStorage(A, slot));
}

// SLOT_RECORDS[ID_RAFFY].addr = keccak(ID_RAFFY . SLOT_RECORDS)
await dump_slot(ethers.keccak256(ethers.concat([ID_RAFFY, SLOT_RECORDS])));

// SLOT_RECORDS[ID_RAFFY].avatar = keccak(ID_RAFFY . SLOT_RECORDS) + 1
await dump_slot(ethers.toBeHex(BigInt(ethers.keccak256(ethers.concat([ID_RAFFY, SLOT_RECORDS]))) + 1n, 32));

// SLOT_RECORDS[ID_RAFFY].avatar[0] = keccak(keccak(ID_RAFFY . SLOT_RECORDS) + 1)
await dump_slot(ethers.keccak256(ethers.toBeHex(BigInt(ethers.keccak256(ethers.concat([ID_RAFFY, SLOT_RECORDS]))) + 1n, 32)));

// SLOT_RECORDS[ID_RAFFY].avatar[1] = keccak(keccak(ID_RAFFY . SLOT_RECORDS) + 1) + 1
await dump_slot(ethers.toBeHex(BigInt(ethers.keccak256(ethers.toBeHex(BigInt(ethers.keccak256(ethers.concat([ID_RAFFY, SLOT_RECORDS]))) + 1n, 32))) + 1n, 32));


// 0 0x5465616d4e69636b000000000000000000000000000000000000000000000010
// 1 0x4e49434b00000000000000000000000000000000000000000000000000000008
// 2 0x0000000000000000000000000000000000000000000000000000000000000000
// 3 0x0000000000000000000000000000000000000000000000000000000000000000
// 4 0x0000000000000000000000000000000000000000000000000000000000000000
// 5 0x0000000000000000000000000000000000000000000000000000000000000000
// 6 0x0000000000000000000000534631bcf33bdb069fb20a93d2fdb9e4d4dd42cf00
// 7 0x0000000000000000000000000000000000000000000000000000000000000000
// 8 0x00000000000000000000000000000000000000000000000000000000000008e5
// 9 0x68747470733a2f2f7465616d6e69636b2e78797a2f6e66742f00000000000032

// 114633536767357890588027973591853720883861747120232615569276906759211372656789n 0x00000000000000000000000051050ec063d393217b436747617ad1c2285aeeee
// 114633536767357890588027973591853720883861747120232615569276906759211372656790n 0x0000000000000000000000000000000000000000000000000000000000000049 = 73
// 114963720059781807266843760027766935475569196030758040205455348772678147577237n 0x68747470733a2f2f72616666792e616e74697374757069642e636f6d2f656e73
// 114963720059781807266843760027766935475569196030758040205455348772678147577238n 0x2e6a706700000000000000000000000000000000000000000000000000000000

